<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version> <!-- lookup parent from repository -->
	</parent>
	<groupId>uk.gov.caz</groupId>
	<artifactId>retrofit-register-api</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>retrofit-register-api</name>
	<description>Retrofit Register API</description>

	<properties>
		<java.version>1.8</java.version>

		<artifactFinalName>${project.artifactId}-${project.version}</artifactFinalName>

		<internal.libraries.version>2.11.4-SNAPSHOT</internal.libraries.version>

		<codeCoverage.minCoveredRatio>1.0</codeCoverage.minCoveredRatio>
		<codeCoverage.classMaxMissedCount>0</codeCoverage.classMaxMissedCount>
		<sonar.coverage.exclusions>
			**/configuration/**/*.java,**/amazonaws/StreamLambdaHandler.java,
			**/amazonaws/RuntimeExceptionHandlerLambda.java,**/amazonaws/LambdaHandler.java,
			**/amazonaws/RetrofitRegisterCsvFromS3Lambda.java,**/dto/*.java,
			**/Application.java
		</sonar.coverage.exclusions>
		<sonar.coverage.jacoco.xmlReportPaths>
			./target/site/jacoco-aggregate/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.exclusions>
			**/Application.java
		</sonar.exclusions>
		<sonar.issue.ignore.multicriteria>j1,j2,j3,j4,j5,j6,j7</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.j1.ruleKey>
			squid:S1075
		</sonar.issue.ignore.multicriteria.j1.ruleKey>
		<sonar.issue.ignore.multicriteria.j1.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.j1.resourceKey>
		<sonar.issue.ignore.multicriteria.j2.ruleKey>
			squid:S2699
		</sonar.issue.ignore.multicriteria.j2.ruleKey>
		<sonar.issue.ignore.multicriteria.j2.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.j2.resourceKey>
		<sonar.issue.ignore.multicriteria.j3.ruleKey>
			squid:S135
		</sonar.issue.ignore.multicriteria.j3.ruleKey>
		<sonar.issue.ignore.multicriteria.j3.resourceKey>
			**/VehicleEntrantsService.java
		</sonar.issue.ignore.multicriteria.j3.resourceKey>
		<sonar.issue.ignore.multicriteria.j4.ruleKey>
			squid:S5304
		</sonar.issue.ignore.multicriteria.j4.ruleKey>
		<sonar.issue.ignore.multicriteria.j4.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.j4.resourceKey>
		<sonar.issue.ignore.multicriteria.j5.ruleKey>
			squid:S4784
		</sonar.issue.ignore.multicriteria.j5.ruleKey>
		<sonar.issue.ignore.multicriteria.j5.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.j5.resourceKey>
		<sonar.issue.ignore.multicriteria.j6.ruleKey>
			squid:S2077
		</sonar.issue.ignore.multicriteria.j6.ruleKey>
		<sonar.issue.ignore.multicriteria.j6.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.j6.resourceKey>
		<sonar.issue.ignore.multicriteria.j7.ruleKey>
			squid:S00112
		</sonar.issue.ignore.multicriteria.j7.ruleKey>
		<sonar.issue.ignore.multicriteria.j7.resourceKey>
			**/StreamLambdaHandler.java
		</sonar.issue.ignore.multicriteria.j7.resourceKey>

		<!-- to enable running only integration tests without unit tests -->
		<skipUnitTests>${skipTests}</skipUnitTests>
		<skipITs>${skipTests}</skipITs>
		<skipLocalContainersSetup>${skipTests}</skipLocalContainersSetup>
	</properties>

	<repositories>
		<repository>
			<id>jcenter-release</id>
			<name>jcenter</name>
			<url>https://jcenter.bintray.com/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>2.7.8</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Internal libraries : begin -->
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>global-exception-mapper</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>correlation-id</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>logger</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>aws-lambda-base</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>version-logger</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.caz</groupId>
			<artifactId>security</artifactId>
			<version>${internal.libraries.version}</version>
		</dependency>
		<!-- Internal libraries : end -->

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>28.0-jre</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.5</version>
		</dependency>

		<!-- aws-related : begin -->
		<dependency>
			<groupId>com.amazonaws.serverless</groupId>
			<artifactId>aws-serverless-java-container-springboot2</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>s3</artifactId>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>lambda</artifactId>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-lambda-java-events</artifactId>
			<version>2.2.7</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>2.9.9</version>
		</dependency>

		<!-- aws-related : end -->

		<!-- Spring-related : begin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- Spring-related : end -->

		<!-- swagger: begin -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>2.10.5</version>
		</dependency>
		<!-- swagger: end -->

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<!-- development-related: begin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>3.1.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>xml-path</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- development-related: end -->

		<!-- db: begin -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.amazonaws.secretsmanager</groupId>
			<artifactId>aws-secretsmanager-jdbc</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<!-- db: end -->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.4.0.905</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/*IT.java</exclude>
					</excludes>
					<skipTests>${skipUnitTests}</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- to enforce running integration tests sequentially -->
					<threadCount>1</threadCount>
					<includes>
						<include>**/*IT.java</include>
					</includes>
					<excludes>
						<exclude>**/*Test.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.30.0</version>

				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>

					</execution>
				</executions>

				<configuration>
					<skip>${skipLocalContainersSetup}</skip>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<image>
							<alias>postgres-it</alias>
							<external>
								<type>compose</type>
								<basedir>src/it/resources</basedir>
								<composeFile>docker-compose-it.yml</composeFile>
							</external>
						</image>
					</images>
				</configuration>
			</plugin>

			<!-- static code analyser -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.12.0</version>
				<configuration>
					<linkXRef>false</linkXRef>
					<printFailingErrors>true</printFailingErrors>
				</configuration>
				<executions>
					<execution>
						<id>pmd-validate</id>
						<phase>validate</phase>

						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
							<goal>pmd</goal> <!-- to generate the report during the build -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- code style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>

				<configuration>
					<configLocation>google_checks.xml</configLocation>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<failOnViolation>true</failOnViolation>
					<linkXRef>false</linkXRef>
					<violationSeverity>warning</violationSeverity>
				</configuration>

				<executions>
					<execution>
						<id>checkstyle-validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Build and Package -->
			<!-- don't build a jar, we'll use the classes dir -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<!-- select and copy only runtime dependencies to a temporary lib folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>zip-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${artifactFinalName}</finalName>
							<descriptors>
								<descriptor>src${file.separator}assembly${file.separator}bin.xml</descriptor>
							</descriptors>
							<attach>false</attach>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
					<encoding>UTF-8</encoding>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.12.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.4</version>
						<configuration>
							<haltOnFailure>true</haltOnFailure>

							<excludes>
								<exclude>**/Application.class</exclude>
								<exclude>**/configuration/**/*.class</exclude>
								<exclude>**/amazonaws/StreamLambdaHandler.class</exclude>
								<exclude>**/amazonaws/RetrofitRegisterCsvFromS3Lambda.class</exclude>
								<exclude>**/amazonaws/RuntimeExceptionHandlerLambda.class</exclude>
								<exclude>**/dto/*.class</exclude>
							</excludes>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${codeCoverage.minCoveredRatio}</minimum>
										</limit>
										<limit>
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>${codeCoverage.classMaxMissedCount}</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
						<executions>
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>pre-integration-test</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>post-integration-test</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>merge-results</id>
								<phase>verify</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
											<excludes>
												<exclude>jacoco-aggregate.exec</exclude>
											</excludes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>post-merge-report</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate
									</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>post-merge-check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>env.BUILD_ID</name>
				</property>
			</activation>
			<properties>
				<artifactFinalName>${project.artifactId}-${env.BUILD_ID}</artifactFinalName>
				<skipLocalContainersSetup>true</skipLocalContainersSetup>
				<skipITs>false</skipITs>
			</properties>
		</profile>

		<profile>
			<id>security</id>
			<properties>
				<runDependencyChecks>true</runDependencyChecks>
				<skipLocalContainersSetup>true</skipLocalContainersSetup>
				<skipITs>true</skipITs>
			</properties>
			<build>
				<plugins>
					<!-- OWASP Dependency Check -->
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>5.2.2</version>
						<configuration>
							<failBuildOnCVSS>10</failBuildOnCVSS>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
